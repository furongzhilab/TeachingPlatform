<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.second.dao.SubjectDao">
    <resultMap id="BaseResultMap" type="com.example.second.entity.Subject">
        <id column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="date" property="date" jdbcType="DATE"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="http" property="http" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        uid, title, date, content, http
    </sql>

    <select id="findAllSubjects" resultType="com.example.second.entity.Subject">
        select * from subject
    </select>

    <select id="findSubjectByTitle" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from subject where title = #{title,jdbcType=VARCHAR}
    </select>

    <delete id="deleteSubjectsByIds">
        delete from subject where uid in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getCountSubjects" resultType="java.lang.Integer">
        select count(uid) as count from subject
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from subject
        where uid = #{uid,jdbcType=BIGINT}
    </select>
    <delete id="deleteSubjectById" parameterType="java.lang.Long">
        delete from subject
        where uid = #{uid,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.example.second.entity.Subject">
        insert into subject (uid, title, date,
                                content, http)
        values (#{uid,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{date,jdbcType=DATE},
                #{content,jdbcType=VARCHAR}, #{http,jdbcType=VARCHAR})
    </insert>
    <insert id="addSubject" parameterType="com.example.second.entity.Subject">
        insert into subject
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="date != null">
                date,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="http != null">
                http,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                #{date,jdbcType=DATE},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="http != null">
                #{http,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateSubject" parameterType="com.example.second.entity.Subject">
        update subject
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                date = #{date,jdbcType=DATE},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="http != null">
                http = #{http,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.second.entity.Subject">
        update subject
        set title = #{title,jdbcType=VARCHAR},
            date = #{date,jdbcType=DATE},
            content = #{content,jdbcType=VARCHAR},
            http = #{http,jdbcType=VARCHAR}
        where uid = #{uid,jdbcType=BIGINT}
    </update>
</mapper>